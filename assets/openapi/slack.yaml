{
  "openapi": "3.0.3",
  "info": {
    "title": "Slack Web API",
    "description": "One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.",
    "version": "1.7.0",
    "contact": {
      "name": "Slack developer relations",
      "url": "https://api.slack.com/support"
    },
    "x-apisguru-categories": [
      "collaboration",
      "messaging"
    ],
    "x-logo": {
      "url": "http://static.tumblr.com/wvuzcz9/LlKncfhmp/slack_logo_240.png"
    },
    "x-origin": [
      {
        "version": "2.0",
        "format": "swagger",
        "url": "https://raw.githubusercontent.com/slackapi/slack-api-specs/master/web-api/slack_web_openapi_v2.json"
      }
    ],
    "x-providerName": "slack.com"
  },
  "servers": [
    {
      "url": "https://slack.com/api"
    }
  ],
  "paths": {
    "/api.test": {
      "get": {
        "description": "Checks API calling code.",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://api.slack.com/methods/api.test"
        },
        "operationId": "api_test",
        "parameters": [
          {
            "description": "example property to return",
            "in": "query",
            "name": "foo",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Error response to return",
            "in": "query",
            "name": "error",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Standard success response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for successful response api.test method",
                  "title": "api.test success schema",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_true"
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Artificial error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for error response api.test method",
                  "title": "api.test error schema",
                  "type": "object",
                  "required": [
                    "ok",
                    "error"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_false"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": false,
                      "error": "my_error",
                      "args": {
                        "error": "my_error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "slackAuth": [
              "none"
            ]
          }
        ],
        "tags": [
          "api"
        ]
      }
    },
    "/apps.permissions.info": {
      "get": {
        "description": "Returns list of permissions this app has on a team.",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://api.slack.com/methods/apps.permissions.info"
        },
        "operationId": "apps_permissions_info",
        "parameters": [
          {
            "description": "Authentication token. Requires scope: `none`",
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Standard success response when used with a user token",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Verbose schema not yet ready for this method.",
                  "title": "Default success template",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_true"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": true,
                      "info": {
                        "app_home": {
                          "resources": {
                            "ids": [
                              "D0C0NU1Q8",
                              "D0BH95DLH"
                            ]
                          },
                          "scopes": [
                            "chat:write",
                            "im:history",
                            "im:read"
                          ]
                        },
                        "channel": {
                          "resources": {
                            "ids": [
                              "C061FA5PB"
                            ],
                            "excluded_ids": [],
                            "wildcard": false
                          },
                          "scopes": [
                            "channels:read"
                          ]
                        },
                        "group": {
                          "resources": {
                            "ids": []
                          },
                          "scopes": []
                        },
                        "im": {
                          "resources": {
                            "ids": []
                          },
                          "scopes": []
                        },
                        "mpim": {
                          "resources": {
                            "ids": []
                          },
                          "scopes": []
                        },
                        "team": {
                          "resources": {
                            "ids": []
                          },
                          "scopes": []
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Standard failure response when used with an invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Verbose schema not yet ready for this method.",
                  "title": "Default error template",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_true"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": false,
                      "error": "invalid_auth"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "slackAuth": [
              "none"
            ]
          }
        ],
        "tags": [
          "apps.permissions",
          "apps"
        ]
      }
    },
    "/apps.permissions.request": {
      "get": {
        "description": "Allows an app to request additional scopes",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://api.slack.com/methods/apps.permissions.request"
        },
        "operationId": "apps_permissions_request",
        "parameters": [
          {
            "description": "A comma separated list of scopes to request for",
            "in": "query",
            "name": "scopes",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Authentication token. Requires scope: `none`",
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Token used to trigger the permissions API",
            "in": "query",
            "name": "trigger_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Standard success response when used with a user token",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for successful response from apps.permissions.request method",
                  "title": "apps.permissions.request schema",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_true"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Standard failure response when trigger_id is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for error response from apps.permissions.request method",
                  "title": "apps.permissions.request error schema",
                  "type": "object",
                  "required": [
                    "ok",
                    "error"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_false"
                    },
                    "error": {
                      "type": "string",
                      "enum": [
                        "invalid_trigger",
                        "trigger_exchanged",
                        "invalid_scope",
                        "invalid_user",
                        "not_authed",
                        "invalid_auth",
                        "account_inactive",
                        "token_revoked",
                        "no_permission",
                        "org_login_required",
                        "user_is_bot",
                        "invalid_arg_name",
                        "invalid_array_arg",
                        "invalid_charset",
                        "invalid_form_data",
                        "invalid_post_type",
                        "missing_post_type",
                        "team_added_to_org",
                        "invalid_json",
                        "json_not_object",
                        "request_timeout",
                        "upgrade_required",
                        "fatal_error"
                      ]
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": false,
                      "error": "invalid_trigger_id"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "slackAuth": [
              "none"
            ]
          }
        ],
        "tags": [
          "apps.permissions",
          "apps"
        ]
      }
    },
    "/apps.permissions.resources.list": {
      "get": {
        "description": "Returns list of resource grants this app has on a team.",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://api.slack.com/methods/apps.permissions.resources.list"
        },
        "operationId": "apps_permissions_resources_list",
        "parameters": [
          {
            "description": "Authentication token. Requires scope: `none`",
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See pagination for more detail.",
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Typical successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for successful response from apps.permissions.resources.list method",
                  "title": "apps.permissions.resources.list success schema",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_true"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": true,
                      "resources": [
                        {
                          "id": "T0DES3UAN",
                          "type": "team"
                        },
                        {
                          "id": "D024BFF1M",
                          "type": "app_home"
                        },
                        {
                          "id": "C024BE91LX",
                          "type": "channel"
                        }
                      ],
                      "response_metadata": {
                        "next_cursor": "dGVhbTpDMDYxRkE1UEI="
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Typical error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for error response from apps.permissions.resources.list method",
                  "title": "apps.permissions.resources.list error schema",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_false"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": false,
                      "error": "invalid_cursor"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "slackAuth": [
              "none"
            ]
          }
        ],
        "tags": [
          "apps.permissions.resources",
          "apps"
        ]
      }
    },
    "/apps.permissions.scopes.list": {
      "get": {
        "description": "Returns list of scopes this app has on a team.",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://api.slack.com/methods/apps.permissions.scopes.list"
        },
        "operationId": "apps_permissions_scopes_list",
        "parameters": [
          {
            "description": "Authentication token. Requires scope: `none`",
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Typical successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for successful response from apps.permissions.scopes.list method",
                  "title": "apps.permissions.scopes.list success schema",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_true"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": true,
                      "scopes": {
                        "app_home": [
                          "chat:write",
                          "im:history",
                          "im:read"
                        ],
                        "channel": [
                          "channels:history",
                          "chat:write"
                        ],
                        "group": [
                          "chat:write"
                        ],
                        "im": [
                          "chat:write"
                        ],
                        "mpim": [
                          "chat:write"
                        ],
                        "team": [
                          "users:read"
                        ],
                        "user": []
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Typical error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for error response from apps.permissions.scopes.list method",
                  "title": "apps.permissions.scopes.list error schema",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_false"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": false,
                      "error": "invalid_auth"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "slackAuth": [
              "none"
            ]
          }
        ],
        "tags": [
          "apps.permissions.scopes",
          "apps"
        ]
      }
    },
    "/apps.permissions.users.list": {
      "get": {
        "description": "Returns list of user grants and corresponding scopes this app has on a team.",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://api.slack.com/methods/apps.permissions.users.list"
        },
        "operationId": "apps_permissions_users_list",
        "parameters": [
          {
            "description": "Authentication token. Requires scope: `none`",
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See pagination for more detail.",
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The maximum number of items to return.",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Typical successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for successful response from apps.permissions.users.list method",
                  "title": "apps.permissions.users.list success schema",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_true"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": true,
                      "resources": [
                        {
                          "id": "U0DES3UAN",
                          "scopes": [
                            "dnd:write:user",
                            "reminders:write:user"
                          ]
                        },
                        {
                          "id": "U024BFF1M",
                          "scopes": [
                            "reminders:write:user"
                          ]
                        }
                      ],
                      "response_metadata": {
                        "next_cursor": "dGVhbTdPMUg5UkFTT0w="
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Typical error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for error response from apps.permissions.users.list method",
                  "title": "apps.permissions.users.list error schema",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_false"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": false,
                      "error": "invalid_cursor"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "slackAuth": [
              "none"
            ]
          }
        ],
        "tags": [
          "apps.permissions.users",
          "apps"
        ]
      }
    },
    "/apps.permissions.users.request": {
      "get": {
        "description": "Enables an app to trigger a permissions modal to grant an app access to a user access scope.",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://api.slack.com/methods/apps.permissions.users.request"
        },
        "operationId": "apps_permissions_users_request",
        "parameters": [
          {
            "description": "Authentication token. Requires scope: `none`",
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A comma separated list of user scopes to request for",
            "in": "query",
            "name": "scopes",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Token used to trigger the request",
            "in": "query",
            "name": "trigger_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The user this scope is being requested for",
            "in": "query",
            "name": "user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Standard success response when used with a user token",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for successful response from apps.permissions.users.request method",
                  "title": "apps.permissions.users.request success schema",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_true"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Standard failure response when trigger_id is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for error response from apps.permissions.users.request method",
                  "title": "apps.permissions.users.request error schema",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_false"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": false,
                      "error": "invalid_trigger_id"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "slackAuth": [
              "none"
            ]
          }
        ],
        "tags": [
          "apps.permissions.users",
          "apps"
        ]
      }
    },
    "/apps.uninstall": {
      "get": {
        "description": "Uninstalls your app from a workspace.",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://api.slack.com/methods/apps.uninstall"
        },
        "operationId": "apps_uninstall",
        "parameters": [
          {
            "description": "Authentication token. Requires scope: `none`",
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Issued when you created your application.",
            "in": "query",
            "name": "client_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Issued when you created your application.",
            "in": "query",
            "name": "client_secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Typical success response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for successful response from apps.uninstall method",
                  "title": "apps.uninstall success schema",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_true"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Typical error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for error response from apps.uninstall method",
                  "title": "apps.uninstall error schema",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_false"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": false,
                      "error": "invalid_auth"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "slackAuth": [
              "none"
            ]
          }
        ],
        "tags": [
          "apps"
        ]
      }
    },
    "/auth.revoke": {
      "get": {
        "description": "Revokes a token.",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://api.slack.com/methods/auth.revoke"
        },
        "operationId": "auth_revoke",
        "parameters": [
          {
            "description": "Authentication token. Requires scope: `none`",
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Setting this parameter to `1` triggers a _testing mode_ where the specified token will not actually be revoked.",
            "in": "query",
            "name": "test",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Typical success response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for successful response of auth.revoke",
                  "title": "AuthRevokeResponse",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_true"
                    },
                    "revoked": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": true,
                      "revoked": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Typical error response",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for error response of auth.revoke",
                  "title": "AuthRevokeDefaultResponse",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_false"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": false,
                      "error": "invalid_auth"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "slackAuth": [
              "none"
            ]
          }
        ],
        "tags": [
          "auth"
        ]
      }
    },
    "/auth.test": {
      "get": {
        "description": "Checks authentication & identity.",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://api.slack.com/methods/auth.test"
        },
        "operationId": "auth_test",
        "parameters": [
          {
            "description": "Authentication token. Requires scope: `none`",
            "in": "header",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Standard success response when used with a user token",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for successful response of auth.test",
                  "title": "AuthTestResponse",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_true"
                    },
                    "url": {
                      "type": "string"
                    },
                    "team": {
                      "type": "string"
                    },
                    "team_id": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": true,
                      "url": "https://subarachnoid.slack.com/",
                      "team": "Subarachnoid Workspace",
                      "team_id": "T12345678",
                      "user": "grace",
                      "user_id": "W12345678"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Standard failure response when used with an invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for error response of auth.test",
                  "title": "AuthTestdefaultResponse",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_false"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": false,
                      "error": "invalid_auth"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "slackAuth": [
              "none"
            ]
          }
        ],
        "tags": [
          "auth"
        ]
      }
    },
    "/bots.info": {
      "get": {
        "description": "Gets information about a bot user.",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://api.slack.com/methods/bots.info"
        },
        "operationId": "bots_info",
        "parameters": [
          {
            "description": "Authentication token. Requires scope: `users:read`",
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Bot user to get info on",
            "in": "query",
            "name": "bot",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "When successful, returns bot info by bot ID.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for successful response from bots.info method",
                  "title": "BotsInfoResponse",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_true"
                    }
                  },
                  "additionalProperties": true
                },
                "examples": {
                  "response": {
                    "value": {
                      "ok": true,
                      "bot": {
                        "id": "B061F7JD2",
                        "deleted": false,
                        "name": "beforebot",
                        "updated": 1449272004,
                        "app_id": "A161CLERW",
                        "user_id": "U012ABCDEF",
                        "icons": {
                          "image_36": "https://...",
                          "image_48": "https://...",
                          "image_72": "https://..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "When no bot can be found or other error",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Schema for error response from bots.info method",
                  "title": "BotsInfodefaultResponse",
                  "type": "object",
                  "required": [
                    "ok"
                  ],
                  "properties": {
                    "ok": {
                      "$ref": "#/components/schemas/defs_ok_false"
                    }
                  },
                  "additionalProperties": true
                }
              }
            }
          }
        },
        "security": [
          {
            "slackAuth": [
              "users:read"
            ]
          }
        ],
        "tags": [
          "bots"
        ]
      }
    }
    // ... (All other methods would be listed here in similar detail)
  },
  "components": {
    "securitySchemes": {
      "slackAuth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://slack.com/oauth/authorize",
            "tokenUrl": "https://slack.com/api/oauth.access",
            "scopes": {
              "admin": "admin",
              "admin.apps:read": "admin.apps:read",
              "admin.apps:write": "admin.apps:write",
              "admin.conversations:read": "admin.conversations:read",
              "admin.conversations:write": "admin.conversations:write",
              "admin.invites:read": "admin.invites:read",
              "admin.invites:write": "admin.invites:write",
              "admin.teams:read": "admin.teams:read",
              "admin.teams:write": "admin.teams:write",
              "admin.usergroups:read": "admin.usergroups:read",
              "admin.usergroups:write": "admin.usergroups:write",
              "admin.users:read": "admin.users:read",
              "admin.users:write": "admin.users:write",
              "authorizations:read": "authorizations:read",
              "bot": "Bot user scope",
              "calls:read": "calls:read",
              "calls:write": "calls:write",
              "channels:history": "channels:history",
              "channels:manage": "channels:manage",
              "channels:read": "channels:read",
              "channels:write": "channels:write",
              "chat:write": "chat:write",
              "chat:write:bot": "Author messages as a bot",
              "chat:write:user": "Author messages as a user",
              "conversations:history": "conversations:history",
              "conversations:read": "conversations:read",
              "conversations:write": "conversations:write",
              "dnd:read": "dnd:read",
              "dnd:write": "dnd:write",
              "emoji:read": "emoji:read",
              "files:read": "files:read",
              "files:write:user": "files:write:user",
              "groups:history": "groups:history",
              "groups:read": "groups:read",
              "groups:write": "groups:write",
              "identity.basic": "identity.basic",
              "im:history": "im:history",
              "im:read": "im:read",
              "im:write": "im:write",
              "links:write": "links:write",
              "mpim:history": "mpim:history",
              "mpim:read": "mpim:read",
              "mpim:write": "mpim:write",
              "none": "No scope required",
              "pins:read": "pins:read",
              "pins:write": "pins:write",
              "reactions:read": "reactions:read",
              "reactions:write": "reactions:write",
              "reminders:read": "reminders:read",
              "reminders:write": "reminders:write",
              "remote_files:read": "remote_files:read",
              "remote_files:share": "remote_files:share",
              "remote_files:write": "remote_files:write",
              "rtm:stream": "rtm:stream",
              "search:read": "search:read",
              "stars:read": "stars:read",
              "stars:write": "stars:write",
              "team:read": "team:read",
              "tokens.basic": "tokens.basic",
              "usergroups:read": "usergroups:read",
              "usergroups:write": "usergroups:write",
              "users.profile:read": "users.profile:read",
              "users.profile:write": "users.profile:write",
              "users:read": "users:read",
              "users:read.email": "users:read.email",
              "users:write": "users:write",
              "workflow.steps:execute": "workflow.steps:execute"
            }
          }
        },
        "description": "Learn more about the Slack Web API",
        "externalDocs": {
          "description": "Learn more about the Slack Web API",
          "url": "https://api.slack.com/web"
        }
      }
    },
    "schemas": {
      "defs_ok_true": {
        "enum": [
          true
        ],
        "type": "boolean",
        "title": "default success response"
      },
      "defs_ok_false": {
        "enum": [
          false
        ],
        "type": "boolean",
        "title": "default failure response"
      }
      // ... (Object schemas for various Slack data types like message, channel, user, etc., omitted for brevity)
    }
  }
}
